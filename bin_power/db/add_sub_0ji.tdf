--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone V" LPM_DIRECTION="ADD" LPM_PIPELINE=1 LPM_REPRESENTATION="SIGNED" LPM_WIDTH=12 aclr clken clock dataa datab overflow result
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:05:09:45:41:SJ cbx_lpm_add_sub 2014:06:05:09:45:41:SJ cbx_mgl 2014:06:05:10:17:12:SJ cbx_stratix 2014:06:05:09:45:41:SJ cbx_stratixii 2014:06:05:09:45:41:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 13 
SUBDESIGN add_sub_0ji
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	dataa[11..0]	:	input;
	datab[11..0]	:	input;
	overflow	:	output;
	result[11..0]	:	output;
) 
VARIABLE
	pipeline_dffe[11..0]	:	DFFE
		WITH (
			power_up ="low"
		);
	overflow_dffe[11..0]	:	DFFE
		WITH (
			power_up ="low"
		);
	result_int[11..0]	:	WIRE;
BEGIN 
	result_int[] = dataa[] + datab[];
	pipeline_dffe[].clk = clock;
	pipeline_dffe[].clrn = !aclr;
	pipeline_dffe[].ena = clken;
	overflow_dffe[].clk = clock;
	overflow_dffe[].clrn = !aclr;
	overflow_dffe[].ena = clken;
	result[] = pipeline_dffe[11..0].q;
	pipeline_dffe[11..0].d = result_int[];
	overflow = overflow_dffe[0..0].q;
	overflow_dffe[0].d = ! (dataa[11] $ datab[11]) & (dataa[11] $ result_int[11]);
END;
--VALID FILE
